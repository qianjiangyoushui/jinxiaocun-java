<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Areapresident">

    <!-- 缓存条数 -->
    <cache size="2000" />

    <!-- 条件语句 -->
    <sql id="WhereSQL">
        <where>
            <if test="guid != null and guid != ''">
                AND T.GUID = #{guid}
            </if>
            <if test="userid != null and userid != ''">
                AND T.USERID = #{userid}
            </if>
            <if test="area != null and area != ''">
                AND T.AREA like  CONCAT('%',#{area},'%')
            </if>
            <if test="remark != null and remark != ''">
                AND T.REMARK = #{remark}
            </if>
            <if test="bank != null and bank != ''">
                AND T.BANK = #{bank}
            </if>
            <if test="sort != null and sort != ''">
                AND T.SORT = #{sort}
            </if>
        </where>
    </sql>

    <!-- 查找语句 -->
    <select id="find" resultType="Areapresident" parameterType="Areapresident" flushCache="false" useCache="true">
        SELECT
        T.GUID AS guid,
        T.USERID AS userid,
        T.AREA AS area,
        T.REMARK AS remark,
        T.BANK AS bank,
        T.SORT AS sort
        FROM areapresident T
        <include refid="WhereSQL" />
        ORDER BY SORT
    </select>
    <!-- 查找语句 -->
    <select id="findDetail" resultMap="areapresident" parameterType="Areapresident" flushCache="false" useCache="true">
        SELECT
        T.GUID AS guid,
        T.USERID AS userid,
        T.AREA AS area,
        T.REMARK AS remark,
        T.BANK AS bank,
        T.SORT AS sort,
        U.USERNAME AS username,
        U.TELPHONE AS telphone
        FROM areapresident T LEFT JOIN users U ON
        T.userid = U.guid
        <include refid="WhereSQL" />
        ORDER BY SORT
    </select>

    <!-- 获取总记录数语句 -->
    <select id="findCount" resultType="java.lang.Integer" parameterType="Areapresident" flushCache="false" useCache="true">
        SELECT COUNT(*)  FROM areapresident T
        <include refid="WhereSQL" />
    </select>

    <!-- 插入语句 -->
    <insert id="insert" parameterType="Areapresident" flushCache="true">
        INSERT INTO areapresident
        (
        GUID,
        USERID,
        AREA,
        REMARK,
        BANK,
        SORT
        )
        VALUES
        (
        #{guid,jdbcType=VARCHAR},
        #{userid,jdbcType=VARCHAR},
        #{area,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR},
        #{bank,jdbcType=VARCHAR},
        #{sort,jdbcType=INTEGER}
        )
    </insert>

    <!-- 更新语句 -->
    <update id="update"  parameterType="Areapresident" flushCache="true">
        update areapresident
        <set>
            <if test="guid != null">GUID=#{guid},</if>
            <if test="userid != null">USERID=#{userid},</if>
            <if test="area != null">AREA=#{area},</if>
            <if test="remark != null">REMARK=#{remark},</if>
            <if test="bank != null">BANK=#{bank},</if>
            <if test="sort != null">SORT=#{sort},</if>
        </set>
        WHERE GUID = #{guid}
    </update>

    <!-- 单选删除语句 -->
    <delete id="delete" parameterType="Areapresident" flushCache="true">
        DELETE FROM areapresident WHERE GUID = #{guid}
    </delete>

    <!-- 多选删除 -->
    <delete id="mulDel" parameterType="java.lang.String" flushCache="true">
        DELETE FROM areapresident WHERE GUID IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <resultMap type="Areapresident" id="areapresident">
        <id property="guid" column="guid" />
        <result property="userid" column="userid" />
        <result property="area" column="area" />
        <association property="users" javaType="Users">
            <id property="guid" column="d_guid"/>
            <result property="username" column="username" />
            <result property="telphone" column="telphone" />
        </association>
    </resultMap>

</mapper>
